---
- name: install nginx packages
  apt:
    pkg: "{{ item }}"
    state: latest
    default_release: "{{ debian_version }}-backports"
  with_items:
    - nginx-extras
  notify: restart nginx
  tags:
    - streaming

- name: install geoip from contrib
  apt:
    pkg: "{{ item }}"
    state: latest
    default_release: "{{ debian_version }}-backports"
  with_items:
    - geoip-database-contrib
  tags:
    - streaming

- name: create nginx content directories
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
  with_items:
  - "{{ streaming.frontend.data_root }}"
  - "{{ streaming.frontend.data_root }}/www"
  - "{{ streaming.frontend.data_root }}/hls"
  tags:
    - streaming

- name: create letsencrypt directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - /etc/letsencrypt
    - /etc/letsencrypt/live
    - /etc/letsencrypt/archive
  when: inventory_hostname != streaming.backend.inventory_hostname
  tags:
    - streaming

- name: copy certificates from main storage server
  synchronize:
    src: "/etc/letsencrypt/{{ item }}/{{ streaming.frontend.server_names|first }}/"
    dest: "/etc/letsencrypt/{{ item }}/{{ streaming.frontend.server_names|first }}/"
    archive: yes
  with_items:
    - live
    - archive
  when: inventory_hostname != streaming.backend.inventory_hostname
  delegate_to: "{{ streaming.backend.inventory_hostname }}"
  notify: restart nginx
  tags:
    - streaming

- name: remove default html directory
  file:
    path: /var/www/html
    state: absent
  tags:
    - streaming

- name: disable nginx default configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx
  tags:
    - streaming

- name: install nginx streaming frontend site configuration
  template:
    src: nginx/sites-enabled/streaming-frontend.conf.j2
    dest: /etc/nginx/sites-enabled/streaming-frontend.conf
    owner: root
    group: root
    mode: 0644
  notify: reload nginx
  tags:
    - streaming
    - streaming_frontend_config

- name: create index.html for streaming frontend
  template:
    src: index.html.j2
    dest: "{{ streaming.frontend.data_root }}/www/index.html"
    owner: www-data
    group: www-data
    mode: 0644
  tags:
    - streaming
