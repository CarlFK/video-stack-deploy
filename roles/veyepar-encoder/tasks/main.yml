---
- name: install parts of veyepar for encoding
  apt:
    name: "{{ item }}"
  with_items:
  - ffmpeg
  - gir1.2-gst-plugins-base-1.0
  - gir1.2-gstreamer-1.0
  - gstreamer1.0-plugins-bad
  - gstreamer1.0-plugins-base
  - gstreamer1.0-plugins-good
  - gstreamer1.0-plugins-ugly
  - gstreamer1.0-tools
  - gstreamer1.0-x
  - imagemagick
  - inkscape
  - libpq5
  - mediainfo
  - mplayer
  - python3-gi
  - tesseract-ocr
  - tesseract-ocr-eng

# - name: git clone veyepar
#  become: true
#become_user:  "{{ user_name }}"
# git:
#     # repo: git://github.com/CarlFK/veyepar.git
#   repo: git://github.com/CarlFK/clocky.git
#  dest: /home/{{ user_name }}/veyepar
# Things done to the server to this work:
#  git clone and nfs export
#  scp dj/local_settings.py videoteam@gw1:/srv/gw1/veyepar/dj/dj
#  scp scripts/pw.py videoteam@gw1:/srv/gw1/veyepar/dj/scripts
#  carl@twist:~/src/veyepar/dj/scripts/bling$ rsync -rtvP lca2017 videoteam@gw1:/srv/gw1/veyepar/dj/scripts/bling
#  ~/src/veyepar/dj/scripts$ scp client_secrets.json videoteam@gw1:/srv/gw1/veyepar/dj/scripts
#  apt install inkscape mplayer python3-venv
#    build-essential python3-dev libpq-dev
#  pip install --upgrade pip
#
# 2to3 -w /srv/gw1/veyepar/ve/lib/python3.5/site-packages/steve
# 2to3 -w /srv/gw1/veyepar/ve/lib/python3.5/site-packages/vidscraper

- name: configure veyepar
  template:
    src: "templates/veyepar.cfg.j2"
    dest: "/home/{{ user_name }}/veyepar.cfg"
    owner:  "{{ user_name }}"
    group:  "{{ user_name }}"

- name: create veyepar show dir
  # will be full of links
  file:
    path: "/home/{{ user_name }}/Videos/veyepar/{{ org }}/{{ show }}"
    state: directory
    recurse: true
    owner:  "{{ user_name }}"
    group:  "{{ user_name }}"

- name: link to local raw files (where Vocto is saving to)
  file:
    state: link
    src: "/srv/{% if room_name is not defined %}{{ nfs_server }}/{% endif %}video/{{ org }}/{{ show }}/dv"
    dest: "/home/{{ user_name }}/Videos/veyepar/{{ org }}/{{ show }}/dv"
    force: yes
    owner:  "{{ user_name }}"
    group:  "{{ user_name }}"

- name: links from local Video dir into nfs mount (for veyepar encoder to read/write)
  file:
    state: link
    src: "/srv/{{ nfs_server }}/video/{{ org }}/{{ show }}/{{ item }}"
    dest: "/home/{{ user_name }}/Videos/veyepar/{{ org }}/{{ show }}/{{ item }}"
    force: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  with_items:
  - assets
  - tmp
  - titles
  - custom
  - img
  - mlt
  - mp4
  - webm

# - name: one key script to activete VE and cd into veyepar scripts
- name: create ~/bin for the v script
  file:
    path: "/home/{{ user_name }}/bin"
    state: directory
    recurse: true
    owner:  "{{ user_name }}"
    group:  "{{ user_name }}"

- name: one key script to activete VE and cd into veyepar scripts
  copy:
    src: "files/v"
    dest: "/home/{{ user_name }}/bin/v"
    owner:  "{{ user_name }}"
    group:  "{{ user_name }}"
    mode: u+x
