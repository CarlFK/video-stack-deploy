#!/usr/bin/env python3

# Initialize XFCE4 config (if necessary) and configure some things, without
# xfconf.

from copy import deepcopy
from pathlib import Path
import shutil
import xml.etree.ElementTree as ET


def initialise_xfconf(filename):
    relative_path = Path('xfce4/xfconf/xfce-perchannel-xml') / filename

    user = Path('~/.config').expanduser() / relative_path
    if not user.exists():
        user.parent.mkdir(parents=True, exist_ok=True)
        world = Path('/etc/xdg') / relative_path
        shutil.copy(str(world), str(user))

    return user


def keyboard_config():
    conf_p = initialise_xfconf('xfce4-keyboard-shortcuts.xml')

    tree = ET.parse(str(conf_p))
    root = tree.getroot()
    commands = root.find('property[@name="commands"]')

    # All user config lives in the custom block
    custom = commands.find('property[@name="custom"]')
    if custom is None:
        default = commands.find('property[@name="default"]')
        custom = deepcopy(default)
        custom.set('name', 'custom')
        commands.append(custom)

        override = ET.Element('property', {
            'name': 'override',
            'type': 'bool',
            'value': 'true',
        })
        custom.append(override)

    # Map Ctrl-Alt-T => xfce4-terminal
    if custom.find('property[@name="<Primary><Alt>t"]') is None:
        bind = ET.Element('property', {
            'name': '<Primary><Alt>t',
            'type': 'string',
            'value': 'xfce4-terminal',
        })
        custom.append(bind)

    tree.write(str(conf_p))


if __name__ == '__main__':
    keyboard_config()
